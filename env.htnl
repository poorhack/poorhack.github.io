<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
    <title>env() Test</title>
    <style>
        :root {
            /* 定义回退值 */
            --safe-area-inset-top: 0px;
            --safe-area-inset-right: 0px;
            --safe-area-inset-bottom: 0px;
            --safe-area-inset-left: 0px;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            /* 使用env()并设置回退值 */
            padding: 
                env(safe-area-inset-top, var(--safe-area-inset-top)) 
                env(safe-area-inset-right, var(--safe-area-inset-right)) 
                env(safe-area-inset-bottom, var(--safe-area-inset-bottom)) 
                env(safe-area-inset-left, var(--safe-area-inset-left));
            
            min-height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 20px;
            margin: 20px;
            color: white;
        }
        
        .status {
            position: fixed;
            top: 10px;
            right: 10px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 10px;
            border-radius: 5px;
            font-family: monospace;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <div class="status" id="envStatus">检测env()支持...</div>
    <div class="container">
        <h1>env() CSS函数测试</h1>
        <p>这个页面测试env()函数是否正常工作。</p>
        <div class="safe-area-display" id="safeAreaDisplay"></div>
    </div>

    <script>
        // 检测env()支持并显示状态
        function checkEnvSupport() {
            const statusEl = document.getElementById('envStatus');
            const displayEl = document.getElementById('safeAreaDisplay');
            
            // 方法1: 使用CSS @supports检测
            const supportsEnv = CSS.supports('padding', 'env(safe-area-inset-top)');
            
            // 方法2: 创建测试元素
            const testEl = document.createElement('div');
            testEl.style.padding = 'env(safe-area-inset-top)';
            const computedPadding = window.getComputedStyle(testEl).paddingTop;
            
            if (supportsEnv && computedPadding !== '0px') {
                statusEl.innerHTML = '✅ env() 支持已启用';
                statusEl.style.background = 'green';
            } else {
                statusEl.innerHTML = '❌ env() 不支持';
                statusEl.style.background = 'red';
            }
            
            // 显示安全区域值
            const computedStyle = window.getComputedStyle(document.body);
            const top = computedStyle.getPropertyValue('padding-top');
            const right = computedStyle.getPropertyValue('padding-right');
            const bottom = computedStyle.getPropertyValue('padding-bottom');
            const left = computedStyle.getPropertyValue('padding-left');
            
            displayEl.innerHTML = `
                <h3>安全区域值:</h3>
                <p>上: ${top}</p>
                <p>右: ${right}</p>
                <p>下: ${bottom}</p>
                <p>左: ${left}</p>
            `;
        }
        
        // 页面加载后检测
        document.addEventListener('DOMContentLoaded', checkEnvSupport);
        
        // 监听视口变化
        window.addEventListener('resize', checkEnvSupport);
        window.addEventListener('orientationchange', checkEnvSupport);
    </script>
</body>
</html>
